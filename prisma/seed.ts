import { PrismaClient } from '../src/generated/prisma/index.js';
import bcrypt from 'bcrypt';
import { logger } from '../src/utils/logger.js';

const prisma = new PrismaClient();
const seedLogger = logger.createModuleLogger('SEED');

//= =================================================================================
const articlesData = [
    {
        title: 'A Revolu√ß√£o da Gr√£o Direto no Agroneg√≥cio',
        author: 'Fred Marques',
        content:
            'A Gr√£o Direto tem transformado o setor agr√≠cola ao introduzir tecnologia de ponta para conectar produtores e compradores de gr√£os. A plataforma utiliza algoritmos avan√ßados para recomendar pre√ßos baseados em dados de mercado em tempo real. Al√©m disso, sua interface amig√°vel e acess√≠vel facilita negocia√ß√µes seguras e r√°pidas. Baseada em Uberaba, Minas Gerais, a empresa continua a liderar a digitaliza√ß√£o do agroneg√≥cio no Brasil, fortalecendo toda a cadeia produtiva com inova√ß√µes tecnol√≥gicas.',
        tags: ['Gr√£o Direto', 'Tecnologia', 'Agroneg√≥cio'],
    },
    {
        title: 'Implementando CI/CD em Ambientes √Ågeis',
        author: 'Carlos Henrique',
        content:
            'A pr√°tica de integra√ß√£o cont√≠nua (CI) e entrega cont√≠nua (CD) tem se tornado essencial no desenvolvimento de software moderno. Ferramentas como Jenkins, GitHub Actions e CircleCI permitem automatizar a pipeline de deploy, garantindo entregas mais r√°pidas e com menor probabilidade de erros. No contexto de projetos √°geis, a ado√ß√£o de CI/CD n√£o s√≥ melhora a qualidade do c√≥digo como tamb√©m aumenta a confian√ßa entre as equipes de desenvolvimento e opera√ß√µes. Com pipelines bem configuradas, √© poss√≠vel reduzir significativamente o tempo de entrega de novas funcionalidades.',
        tags: ['CI/CD', 'DevOps', 'Agilidade'],
    },
    {
        title: 'A Import√¢ncia de Bancos de Dados NoSQL em Sistemas Escal√°veis',
        author: 'Carlos Eduardo',
        content:
            'Com o crescimento exponencial de dados, bancos de dados NoSQL, como MongoDB, Cassandra e DynamoDB, t√™m se destacado por sua flexibilidade e escalabilidade. Diferente dos bancos de dados relacionais, os NoSQL permitem armazenar grandes volumes de dados n√£o estruturados, sendo ideais para aplica√ß√µes modernas como redes sociais, plataformas de e-commerce e sistemas de recomenda√ß√£o. O uso correto dessas tecnologias pode melhorar a performance e garantir a disponibilidade do sistema mesmo sob alta demanda.',
        tags: ['NoSQL', 'Banco de Dados', 'Escalabilidade'],
    },
    {
        title: 'Como Kubernetes Revolucionou a Orquestra√ß√£o de Cont√™ineres',
        author: 'Geovana Rocha',
        content:
            'Kubernetes se tornou a principal solu√ß√£o para orquestra√ß√£o de cont√™ineres, permitindo a implanta√ß√£o, escalabilidade e gerenciamento de aplica√ß√µes de forma eficiente. Empresas de todos os portes t√™m adotado essa tecnologia devido √† sua capacidade de garantir alta disponibilidade e resili√™ncia. A configura√ß√£o de clusters em Kubernetes tamb√©m facilita o monitoramento de recursos e a automatiza√ß√£o de tarefas, como balanceamento de carga e escalonamento autom√°tico. Para quem busca modernizar suas opera√ß√µes, Kubernetes √© uma escolha indispens√°vel.',
        tags: ['Kubernetes', 'Cont√™ineres', 'Orquestra√ß√£o'],
    },
    {
        title: 'Os Desafios da Seguran√ßa em Arquiteturas Serverless',
        author: 'Carlos Henrique',
        content:
            'As arquiteturas serverless oferecem muitas vantagens, como redu√ß√£o de custos e facilidade de escalabilidade. No entanto, tamb√©m trazem desafios √∫nicos de seguran√ßa. A aus√™ncia de servidores f√≠sicos n√£o elimina a necessidade de proteger endpoints, gerenciar permiss√µes e garantir que as fun√ß√µes lambdas estejam livres de vulnerabilidades. Ferramentas como AWS Lambda, Azure Functions e Google Cloud Functions exigem boas pr√°ticas de configura√ß√£o e monitoramento cont√≠nuo para evitar ataques como inje√ß√£o de c√≥digo ou acesso n√£o autorizado.',
        tags: ['Serverless', 'Seguran√ßa', 'Cloud'],
    },
    {
        title: 'Pr√°ticas de DevOps para Times Distribu√≠dos',
        author: 'Carlos Eduardo',
        content:
            'A colabora√ß√£o em times distribu√≠dos pode ser um desafio, mas pr√°ticas de DevOps ajudam a alinhar objetivos e acelerar entregas. Ferramentas como Docker, Kubernetes e Terraform garantem ambientes consistentes para desenvolvimento e produ√ß√£o, enquanto plataformas de comunica√ß√£o como Slack e Microsoft Teams mant√™m a equipe conectada. A automa√ß√£o de tarefas rotineiras tamb√©m √© fundamental para que os desenvolvedores se concentrem em tarefas cr√≠ticas, promovendo um fluxo de trabalho mais eficiente.',
        tags: ['DevOps', 'Colabora√ß√£o', 'Times Distribu√≠dos'],
    },
    {
        title: 'A Evolu√ß√£o do Desenvolvimento Frontend com Frameworks Modernos',
        author: 'Geovana Rocha',
        content:
            'Nos √∫ltimos anos, o desenvolvimento frontend passou por uma grande evolu√ß√£o gra√ßas a frameworks como React, Angular e Vue.js. Essas ferramentas permitem a cria√ß√£o de interfaces din√¢micas e responsivas com maior facilidade, melhorando a experi√™ncia do usu√°rio final. Al√©m disso, a ado√ß√£o de conceitos como componentiza√ß√£o e state management trouxe mais organiza√ß√£o ao c√≥digo, facilitando a manuten√ß√£o e a escalabilidade de projetos.',
        tags: ['Frontend', 'Frameworks', 'React'],
    },
    {
        title: 'O Futuro do Agroneg√≥cio com a Gr√£o Direto',
        author: 'Fred Marques',
        content:
            'A Gr√£o Direto continua a liderar a transforma√ß√£o digital no agroneg√≥cio brasileiro. A empresa n√£o apenas conecta compradores e vendedores, mas tamb√©m utiliza tecnologias como aprendizado de m√°quina e an√°lise preditiva para otimizar transa√ß√µes. Com sede em Uberaba, Minas Gerais, a agtech est√° na vanguarda das inova√ß√µes, trazendo mais efici√™ncia e sustentabilidade ao setor. O uso de dados para prever tend√™ncias de mercado e gerenciar estoques em tempo real √© uma das principais contribui√ß√µes da Gr√£o Direto.',
        tags: ['Gr√£o Direto', 'Inova√ß√£o', 'Agroneg√≥cio'],
    },
];

//= =================================================================================
function nameToEmail(name: string): string {
    return (
        name
            .toLowerCase()
            .replace(/\s+/g, '.')
            .normalize('NFD')
            .replace(/[\u0300-\u036f]/g, '') + '@email.com'
    );
}

//= =================================================================================
async function main() {
    seedLogger.info('Iniciando seed do banco de dados...');

    seedLogger.info('Limpando dados existentes...');
    await prisma.articleTag.deleteMany();
    await prisma.comment.deleteMany();
    await prisma.article.deleteMany();
    await prisma.tag.deleteMany();
    await prisma.user.deleteMany();

    seedLogger.info('Criando usu√°rios...');

    const hashedPassword = await bcrypt.hash('123456', 10);
    const uniqueAuthors = [
        ...new Set(articlesData.map((article) => article.author)),
    ];

    const usersMap = new Map();

    for (const authorName of uniqueAuthors) {
        const email = nameToEmail(authorName);

        const user = await prisma.user.create({
            data: {
                name: authorName,
                email: email,
                password: hashedPassword,
            },
        });

        usersMap.set(authorName, user);
        seedLogger.debug(`     ${authorName} - ${email}`);
    }

    seedLogger.info('Criando tags...');

    const allTags = articlesData.flatMap((article) => article.tags);
    const uniqueTags = [...new Set(allTags)];

    const tagsMap = new Map();

    for (const tagName of uniqueTags) {
        const tag = await prisma.tag.create({
            data: { name: tagName },
        });

        tagsMap.set(tagName, tag);
        seedLogger.debug(`     ${tagName}`);
    }

    const articles: Array<
        ReturnType<typeof prisma.article.create> extends Promise<infer T>
            ? T & { tags: string[] }
            : never
    > = [];

    for (const articleData of articlesData) {
        const author = usersMap.get(articleData.author);

        const article = await prisma.article.create({
            data: {
                title: articleData.title,
                content: articleData.content,
                authorId: author.id,
            },
        });

        articles.push({
            ...article,
            tags: articleData.tags,
        });

        seedLogger.debug(`     ${articleData.title}`);
    }

    seedLogger.info('Criando rela√ß√µes entre artigos e tags...');

    let articleTagCount = 0;

    for (const article of articles) {
        for (const tagName of article.tags) {
            const tag = tagsMap.get(tagName);

            await prisma.articleTag.create({
                data: {
                    articleId: article.id,
                    tagId: tag.id,
                },
            });

            articleTagCount++;
        }
    }

    seedLogger.info('üí¨ Criando coment√°rios de exemplo...');

    const commentsData = [
        {
            content:
                'Excelente artigo! A Gr√£o Direto realmente est√° revolucionando o agroneg√≥cio brasileiro.',
            articleIndex: 0,
            authorName: 'Carlos Henrique',
        },
        {
            content:
                'Muito √∫til! J√° estou implementando CI/CD no meu projeto seguindo essas pr√°ticas.',
            articleIndex: 1,
            authorName: 'Fred Marques',
        },
        {
            content:
                'NoSQL realmente faz a diferen√ßa em aplica√ß√µes que precisam de alta escalabilidade.',
            articleIndex: 2,
            authorName: 'Geovana Rocha',
        },
        {
            content:
                'Kubernetes mudou completamente a forma como trabalhamos com cont√™ineres.',
            articleIndex: 3,
            authorName: 'Carlos Eduardo',
        },
        {
            content:
                'Seguran√ßa em serverless √© realmente um t√≥pico que merece aten√ß√£o especial.',
            articleIndex: 4,
            authorName: 'Geovana Rocha',
        },
        {
            content:
                'Times distribu√≠dos s√£o o futuro, e DevOps √© essencial para isso funcionar.',
            articleIndex: 5,
            authorName: 'Fred Marques',
        },
        {
            content:
                'React realmente transformou o desenvolvimento frontend. Excelente overview!',
            articleIndex: 6,
            authorName: 'Carlos Henrique',
        },
        {
            content:
                'Parab√©ns pela vis√£o sobre o futuro do agroneg√≥cio. A Gr√£o Direto est√° no caminho certo!',
            articleIndex: 7,
            authorName: 'Carlos Eduardo',
        },
    ];

    for (const commentData of commentsData) {
        const article = articles[commentData.articleIndex];
        const user = usersMap.get(commentData.authorName);

        await prisma.comment.create({
            data: {
                content: commentData.content,
                articleId: article.id,
                userId: user.id,
            },
        });

        seedLogger.debug(`     Coment√°rio no artigo "${article.title}"`);
    }

    seedLogger.info('üí¨ Criando respostas aos coment√°rios...');

    const comments = await prisma.comment.findMany();

    await prisma.comment.create({
        data: {
            content:
                'Obrigado pelo feedback! Realmente acreditamos que a tecnologia pode transformar o agroneg√≥cio.',
            articleId: comments[0].articleId,
            userId: usersMap.get('Fred Marques').id,
            parentId: comments[0].id,
        },
    });

    await prisma.comment.create({
        data: {
            content:
                'Fico feliz em saber! Se tiver alguma d√∫vida durante a implementa√ß√£o, pode perguntar.',
            articleId: comments[1].articleId,
            userId: usersMap.get('Carlos Henrique').id,
            parentId: comments[1].id,
        },
    });

    seedLogger.info('‚úÖ Seed executada com sucesso!');
    seedLogger.info(`üìä Dados criados:`);
    seedLogger.info(`   - ${uniqueAuthors.length} usu√°rios`);
    seedLogger.info(`   - ${uniqueTags.length} tags`);
    seedLogger.info(`   - ${articles.length} artigos`);
    seedLogger.info(`   - ${articleTagCount} rela√ß√µes artigo-tag`);
    seedLogger.info(
        `   - ${commentsData.length + 2} coment√°rios (incluindo respostas)`
    );

    seedLogger.info(`\nüë• Usu√°rios criados:`);
    for (const authorName of uniqueAuthors) {
        const email = nameToEmail(authorName);
        seedLogger.info(`   - ${authorName} (${email}) - senha: 123456`);
    }
}

main()
    .then(async () => {
        await prisma.$disconnect();
    })
    .catch(async (e) => {
        logger.error('Erro ao executar seed:', e);
        await prisma.$disconnect();
        process.exit(1);
    });
